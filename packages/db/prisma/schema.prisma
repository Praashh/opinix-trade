generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          String     @id @default(cuid())
  phoneNumber String     @unique
  balance     Int        @default(0)
  role        UserRole
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @default(now())
  OTP         OTP[]
  Payout      Payout[]
  portfolio   Portfolio?
  events      Event[]    @relation("EventParticipants")
}

model Portfolio {
  id              String   @id @default(cuid())
  userId          String   @unique
  currentBalances Float    @default(0.0)
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
  user            User     @relation(fields: [userId], references: [id])
}

// SOT - source of truth
model Event {
  id           String      @id @default(cuid())
  eventId      Int         @unique
  slug         String      @unique
  description  String
  title        String
  start_date   DateTime
  end_date     DateTime
  expiresAt    DateTime
  min_bet      Float
  max_bet      Float
  quantity     Int
  sot          String
  traders      Int         @default(0)
  status       EventStatus @default(ONGOING)
  createdAt    DateTime    @default(now())
  updatedAt    DateTime    @updatedAt
  participants User[]      @relation("EventParticipants")
}

model Payout {
  id        String       @id @default(cuid())
  userId    String
  amount    Float
  status    PayoutStatus
  createdAt DateTime     @default(now())
  updatedAt DateTime     @updatedAt
  user      User         @relation(fields: [userId], references: [id])
}

model OTP {
  id         String   @id @default(uuid())
  userId     String?
  otp        String   @unique
  createdAt  DateTime @default(now())
  expiresAt  DateTime
  otpID      String   @unique
  isVerified Boolean  @default(false)
  user       User?    @relation(fields: [userId], references: [id])
}

enum UserRole {
  ADMIN
  USER
}

enum EventStatus {
  ONGOING
  ENDED
}

enum TradeSide {
  YES
  NO
}

enum PayoutStatus {
  PENDING
  COMPLETED
  FAILED
}

enum TradeStatus {
  ACTIVE
  PAST
}

enum OrderStatus {
  PENDING
  PLACED
}
